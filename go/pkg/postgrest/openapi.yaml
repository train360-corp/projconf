openapi: 3.0.1
info:
  title: standard public schema
  description: ""
  version: 12.2.12 (cd3cf9e)
externalDocs:
  description: PostgREST Documentation
  url: https://postgrest.org/en/v12/references/api.html
servers:
- url: http://0.0.0.0:3000/
paths:
  /:
    get:
      tags:
      - Introspection
      summary: OpenAPI description (this document)
      responses:
        "200":
          description: OK
          content: {}
  /variables:
    get:
      tags:
      - variables
      parameters:
      - name: id
        in: query
        schema:
          type: string
      - name: description
        in: query
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      - name: generator_data
        in: query
        schema:
          type: string
      - name: generator_type
        in: query
        schema:
          type: string
      - name: project_id
        in: query
        schema:
          type: string
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/variables'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/variables'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/variables'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/variables'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - variables
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: variables
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/variables'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/variables'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/variables'
          text/csv:
            schema:
              $ref: '#/components/schemas/variables'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: variables
    delete:
      tags:
      - variables
      parameters:
      - name: id
        in: query
        schema:
          type: string
      - name: description
        in: query
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      - name: generator_data
        in: query
        schema:
          type: string
      - name: generator_type
        in: query
        schema:
          type: string
      - name: project_id
        in: query
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - variables
      parameters:
      - name: id
        in: query
        schema:
          type: string
      - name: description
        in: query
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      - name: generator_data
        in: query
        schema:
          type: string
      - name: generator_type
        in: query
        schema:
          type: string
      - name: project_id
        in: query
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: variables
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/variables'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/variables'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/variables'
          text/csv:
            schema:
              $ref: '#/components/schemas/variables'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: variables
  /environments:
    get:
      tags:
      - environments
      parameters:
      - name: id
        in: query
        schema:
          type: string
      - name: created_at
        in: query
        schema:
          type: string
      - name: display
        in: query
        schema:
          type: string
      - name: project_id
        in: query
        schema:
          type: string
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/environments'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/environments'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/environments'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/environments'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - environments
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: environments
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/environments'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/environments'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/environments'
          text/csv:
            schema:
              $ref: '#/components/schemas/environments'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: environments
    delete:
      tags:
      - environments
      parameters:
      - name: id
        in: query
        schema:
          type: string
      - name: created_at
        in: query
        schema:
          type: string
      - name: display
        in: query
        schema:
          type: string
      - name: project_id
        in: query
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - environments
      parameters:
      - name: id
        in: query
        schema:
          type: string
      - name: created_at
        in: query
        schema:
          type: string
      - name: display
        in: query
        schema:
          type: string
      - name: project_id
        in: query
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: environments
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/environments'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/environments'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/environments'
          text/csv:
            schema:
              $ref: '#/components/schemas/environments'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: environments
  /secrets:
    get:
      tags:
      - secrets
      parameters:
      - name: id
        in: query
        schema:
          type: string
      - name: created_at
        in: query
        schema:
          type: string
      - name: variable_id
        in: query
        schema:
          type: string
      - name: environment_id
        in: query
        schema:
          type: string
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/secrets'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/secrets'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/secrets'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/secrets'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - secrets
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: secrets
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/secrets'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/secrets'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/secrets'
          text/csv:
            schema:
              $ref: '#/components/schemas/secrets'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: secrets
    delete:
      tags:
      - secrets
      parameters:
      - name: id
        in: query
        schema:
          type: string
      - name: created_at
        in: query
        schema:
          type: string
      - name: variable_id
        in: query
        schema:
          type: string
      - name: environment_id
        in: query
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - secrets
      parameters:
      - name: id
        in: query
        schema:
          type: string
      - name: created_at
        in: query
        schema:
          type: string
      - name: variable_id
        in: query
        schema:
          type: string
      - name: environment_id
        in: query
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: secrets
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/secrets'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/secrets'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/secrets'
          text/csv:
            schema:
              $ref: '#/components/schemas/secrets'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: secrets
  /clients:
    get:
      tags:
      - clients
      parameters:
      - name: id
        in: query
        schema:
          type: string
      - name: created_at
        in: query
        schema:
          type: string
      - name: display
        in: query
        schema:
          type: string
      - name: environment_id
        in: query
        schema:
          type: string
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/clients'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/clients'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/clients'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/clients'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - clients
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: clients
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clients'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/clients'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/clients'
          text/csv:
            schema:
              $ref: '#/components/schemas/clients'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: clients
    delete:
      tags:
      - clients
      parameters:
      - name: id
        in: query
        schema:
          type: string
      - name: created_at
        in: query
        schema:
          type: string
      - name: display
        in: query
        schema:
          type: string
      - name: environment_id
        in: query
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - clients
      parameters:
      - name: id
        in: query
        schema:
          type: string
      - name: created_at
        in: query
        schema:
          type: string
      - name: display
        in: query
        schema:
          type: string
      - name: environment_id
        in: query
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: clients
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clients'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/clients'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/clients'
          text/csv:
            schema:
              $ref: '#/components/schemas/clients'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: clients
  /projects:
    get:
      tags:
      - projects
      parameters:
      - name: id
        in: query
        schema:
          type: string
      - name: display
        in: query
        schema:
          type: string
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/projects'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/projects'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/projects'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/projects'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - projects
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: projects
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/projects'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/projects'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/projects'
          text/csv:
            schema:
              $ref: '#/components/schemas/projects'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: projects
    delete:
      tags:
      - projects
      parameters:
      - name: id
        in: query
        schema:
          type: string
      - name: display
        in: query
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - projects
      parameters:
      - name: id
        in: query
        schema:
          type: string
      - name: display
        in: query
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: projects
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/projects'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/projects'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/projects'
          text/csv:
            schema:
              $ref: '#/components/schemas/projects'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: projects
  /clients_secrets:
    get:
      tags:
      - clients_secrets
      parameters:
      - name: id
        in: query
        schema:
          type: string
      - name: created_at
        in: query
        schema:
          type: string
      - name: hash
        in: query
        schema:
          type: string
      - name: client_id
        in: query
        schema:
          type: string
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: order
        in: query
        description: Ordering
        schema:
          type: string
      - name: Range
        in: header
        description: Limiting and Pagination
        schema:
          type: string
      - name: Range-Unit
        in: header
        description: Limiting and Pagination
        schema:
          type: string
          default: items
      - name: offset
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: limit
        in: query
        description: Limiting and Pagination
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - count=none
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/clients_secrets'
            application/vnd.pgrst.object+json;nulls=stripped:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/clients_secrets'
            application/vnd.pgrst.object+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/clients_secrets'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/clients_secrets'
        "206":
          description: Partial Content
          content: {}
    post:
      tags:
      - clients_secrets
      parameters:
      - name: select
        in: query
        description: Filtering Columns
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
          - resolution=ignore-duplicates
          - resolution=merge-duplicates
      requestBody:
        description: clients_secrets
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clients_secrets'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/clients_secrets'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/clients_secrets'
          text/csv:
            schema:
              $ref: '#/components/schemas/clients_secrets'
        required: false
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: clients_secrets
    delete:
      tags:
      - clients_secrets
      parameters:
      - name: id
        in: query
        schema:
          type: string
      - name: created_at
        in: query
        schema:
          type: string
      - name: hash
        in: query
        schema:
          type: string
      - name: client_id
        in: query
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - clients_secrets
      parameters:
      - name: id
        in: query
        schema:
          type: string
      - name: created_at
        in: query
        schema:
          type: string
      - name: hash
        in: query
        schema:
          type: string
      - name: client_id
        in: query
        schema:
          type: string
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - return=representation
          - return=minimal
          - return=none
      requestBody:
        description: clients_secrets
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clients_secrets'
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              $ref: '#/components/schemas/clients_secrets'
          application/vnd.pgrst.object+json:
            schema:
              $ref: '#/components/schemas/clients_secrets'
          text/csv:
            schema:
              $ref: '#/components/schemas/clients_secrets'
        required: false
      responses:
        "204":
          description: No Content
          content: {}
      x-codegen-request-body-name: clients_secrets
  /rpc/secrets:
    get:
      tags:
      - (rpc) secrets
      responses:
        "200":
          description: OK
          content: {}
    post:
      tags:
      - (rpc) secrets
      parameters:
      - name: Prefer
        in: header
        description: Preference
        schema:
          type: string
          enum:
          - params=single-object
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/vnd.pgrst.object+json;nulls=stripped:
            schema:
              type: object
          application/vnd.pgrst.object+json:
            schema:
              type: object
          text/csv:
            schema:
              type: object
        required: true
      responses:
        "200":
          description: OK
          content: {}
      x-codegen-request-body-name: args
components:
  schemas:
    variables:
      required:
      - description
      - generator_data
      - generator_type
      - id
      - key
      - project_id
      type: object
      properties:
        id:
          type: string
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: uuid
        description:
          type: string
          format: text
          default: ""
        key:
          type: string
          format: text
        generator_data:
          type: object
          format: jsonb
        generator_type:
          type: string
          format: public.generator
          enum:
          - STATIC
          - RANDOM
        project_id:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>
          format: uuid
    environments:
      required:
      - created_at
      - display
      - id
      - project_id
      type: object
      properties:
        id:
          type: string
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: uuid
        created_at:
          type: string
          format: timestamp with time zone
          default: (now() AT TIME ZONE 'utc'::text)
        display:
          type: string
          format: text
          default: ""
        project_id:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>
          format: uuid
    secrets:
      required:
      - created_at
      - environment_id
      - id
      - variable_id
      type: object
      properties:
        id:
          type: string
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: uuid
        created_at:
          type: string
          format: timestamp with time zone
          default: (now() AT TIME ZONE 'utc'::text)
        variable_id:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `variables.id`.<fk table='variables' column='id'/>
          format: uuid
        environment_id:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `environments.id`.<fk table='environments' column='id'/>
          format: uuid
    clients:
      required:
      - created_at
      - display
      - environment_id
      - id
      type: object
      properties:
        id:
          type: string
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: uuid
        created_at:
          type: string
          format: timestamp with time zone
          default: (now() AT TIME ZONE 'utc'::text)
        display:
          type: string
          format: text
          default: ""
        environment_id:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `environments.id`.<fk table='environments' column='id'/>
          format: uuid
    projects:
      required:
      - display
      - id
      type: object
      properties:
        id:
          type: string
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: uuid
        display:
          type: string
          format: text
          default: ""
    clients_secrets:
      required:
      - client_id
      - created_at
      - hash
      - id
      type: object
      properties:
        id:
          type: string
          description: |-
            Note:
            This is a Primary Key.<pk/>
          format: uuid
        created_at:
          type: string
          format: timestamp with time zone
          default: (now() AT TIME ZONE 'utc'::text)
        hash:
          type: string
          format: text
        client_id:
          type: string
          description: |-
            Note:
            This is a Foreign Key to `clients.id`.<fk table='clients' column='id'/>
          format: uuid
  parameters:
    preferParams:
      name: Prefer
      in: header
      description: Preference
      schema:
        type: string
        enum:
        - params=single-object
    preferReturn:
      name: Prefer
      in: header
      description: Preference
      schema:
        type: string
        enum:
        - return=representation
        - return=minimal
        - return=none
    preferCount:
      name: Prefer
      in: header
      description: Preference
      schema:
        type: string
        enum:
        - count=none
    preferPost:
      name: Prefer
      in: header
      description: Preference
      schema:
        type: string
        enum:
        - return=representation
        - return=minimal
        - return=none
        - resolution=ignore-duplicates
        - resolution=merge-duplicates
    select:
      name: select
      in: query
      description: Filtering Columns
      schema:
        type: string
    on_conflict:
      name: on_conflict
      in: query
      description: On Conflict
      schema:
        type: string
    order:
      name: order
      in: query
      description: Ordering
      schema:
        type: string
    range:
      name: Range
      in: header
      description: Limiting and Pagination
      schema:
        type: string
    rangeUnit:
      name: Range-Unit
      in: header
      description: Limiting and Pagination
      schema:
        type: string
        default: items
    offset:
      name: offset
      in: query
      description: Limiting and Pagination
      schema:
        type: string
    limit:
      name: limit
      in: query
      description: Limiting and Pagination
      schema:
        type: string
    rowFilter.variables.id:
      name: id
      in: query
      schema:
        type: string
    rowFilter.variables.description:
      name: description
      in: query
      schema:
        type: string
    rowFilter.variables.key:
      name: key
      in: query
      schema:
        type: string
    rowFilter.variables.generator_data:
      name: generator_data
      in: query
      schema:
        type: string
    rowFilter.variables.generator_type:
      name: generator_type
      in: query
      schema:
        type: string
    rowFilter.variables.project_id:
      name: project_id
      in: query
      schema:
        type: string
    rowFilter.environments.id:
      name: id
      in: query
      schema:
        type: string
    rowFilter.environments.created_at:
      name: created_at
      in: query
      schema:
        type: string
    rowFilter.environments.display:
      name: display
      in: query
      schema:
        type: string
    rowFilter.environments.project_id:
      name: project_id
      in: query
      schema:
        type: string
    rowFilter.secrets.id:
      name: id
      in: query
      schema:
        type: string
    rowFilter.secrets.created_at:
      name: created_at
      in: query
      schema:
        type: string
    rowFilter.secrets.variable_id:
      name: variable_id
      in: query
      schema:
        type: string
    rowFilter.secrets.environment_id:
      name: environment_id
      in: query
      schema:
        type: string
    rowFilter.clients.id:
      name: id
      in: query
      schema:
        type: string
    rowFilter.clients.created_at:
      name: created_at
      in: query
      schema:
        type: string
    rowFilter.clients.display:
      name: display
      in: query
      schema:
        type: string
    rowFilter.clients.environment_id:
      name: environment_id
      in: query
      schema:
        type: string
    rowFilter.projects.id:
      name: id
      in: query
      schema:
        type: string
    rowFilter.projects.display:
      name: display
      in: query
      schema:
        type: string
    rowFilter.clients_secrets.id:
      name: id
      in: query
      schema:
        type: string
    rowFilter.clients_secrets.created_at:
      name: created_at
      in: query
      schema:
        type: string
    rowFilter.clients_secrets.hash:
      name: hash
      in: query
      schema:
        type: string
    rowFilter.clients_secrets.client_id:
      name: client_id
      in: query
      schema:
        type: string
  requestBodies:
    body.variables:
      description: variables
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/variables'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/variables'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/variables'
        text/csv:
          schema:
            $ref: '#/components/schemas/variables'
      required: false
    body.environments:
      description: environments
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/environments'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/environments'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/environments'
        text/csv:
          schema:
            $ref: '#/components/schemas/environments'
      required: false
    body.secrets:
      description: secrets
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/secrets'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/secrets'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/secrets'
        text/csv:
          schema:
            $ref: '#/components/schemas/secrets'
      required: false
    body.clients:
      description: clients
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/clients'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/clients'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/clients'
        text/csv:
          schema:
            $ref: '#/components/schemas/clients'
      required: false
    body.projects:
      description: projects
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/projects'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/projects'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/projects'
        text/csv:
          schema:
            $ref: '#/components/schemas/projects'
      required: false
    body.clients_secrets:
      description: clients_secrets
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/clients_secrets'
        application/vnd.pgrst.object+json;nulls=stripped:
          schema:
            $ref: '#/components/schemas/clients_secrets'
        application/vnd.pgrst.object+json:
          schema:
            $ref: '#/components/schemas/clients_secrets'
        text/csv:
          schema:
            $ref: '#/components/schemas/clients_secrets'
      required: false
x-original-swagger-version: "2.0"
