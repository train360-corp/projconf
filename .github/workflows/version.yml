on:
  push:
    paths:
      - 'version.json'
      - '.github/workflows/version.yml'

permissions:
  contents: write
  packages: write
  attestations: write
  id-token: write

jobs:
  version:
    uses: train360-corp/actions/.github/workflows/version-check.yml@main
    with:
      file-name: version.json
      json-version-path: .version
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }}

  tag:
    runs-on: ubuntu-24.04
    needs:
      - version
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # important so tags/history are available

      - name: Create tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "v${{ needs.version.outputs.version }}" -m "Release v${{ needs.version.outputs.version }}"
          git push origin "v${{ needs.version.outputs.version }}"

  build:
    name: Build (CLI)
    needs:
      - tag
      - version
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        id: goreleaser
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean --skip=validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_REPO_SECRET: ${{ secrets.HOMEBREW_TAP_REPO_SECRET }}

  types-typescript:
    name: Generate Types (TypeScript)
    needs: version
    runs-on: ubuntu-24.04
    steps:

      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq moreutils

      - name: compile
        run: npm ci && npm run test && npm run build
        working-directory: ${{ github.workspace }}/types/typescript

      - name: publish to npm
        run: npm publish --access public
        working-directory: ${{ github.workspace }}/types/typescript
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTOMATION_KEY }}

  ###################################
  #     RELEASE DOCKER PACKAGE     #
  ###################################
  build-web:
    name: Web (Build)
    needs:
      - tag
      - version
    strategy:
      fail-fast: false
      matrix:
        config:
          - platform: linux/arm64
            runs-on: ubuntu-24.04-arm
          - platform: linux/amd64
            runs-on: ubuntu-24.04
    runs-on: ${{ matrix.config.runs-on }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # important so tags/history are available

      - name: Prepare
        run: |
          platform=${{ matrix.config.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - uses: docker/login-action@v3
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io

      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      - uses: docker/setup-qemu-action@v3

      - uses: docker/setup-buildx-action@v3

      - id: build
        uses: docker/build-push-action@v6
        with:
          context: ./web
          platforms: ${{ matrix.config.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ghcr.io/${{ github.repository }}
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true
          cache-from: type=gha,scope=web-${{ matrix.config.platform }}
          cache-to: type=gha,mode=max,scope=web-${{ matrix.config.platform }}

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge-web:
    name: Web (Merge)
    needs:
     - build-web
     - version
    runs-on: ubuntu-24.04
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha,enable=true,prefix=,suffix=,format=short
            type=semver,enable=true,pattern={{version}},value=v${{ needs.version.outputs.version }}
            type=raw,enable=true,value=latest

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf 'ghcr.io/${{ github.repository }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ghcr.io/${{ github.repository }}:${{ steps.meta.outputs.version }}